ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"system_stm32h7xx.c"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text.SystemInit,"ax",%progbits
  17              		.align	1
  18              		.global	SystemInit
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv5-d16
  25              	SystemInit:
  26              	.LFB144:
  27              		.file 1 "Core/Src/system_stm32h7xx.c"
   1:Core/Src/system_stm32h7xx.c **** /**
   2:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32h7xx.c ****   * @file    system_stm32h7xx.c
   4:Core/Src/system_stm32h7xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32h7xx.c ****   * @brief   CMSIS Cortex-Mx Device Peripheral Access Layer System Source File.
   6:Core/Src/system_stm32h7xx.c ****   *
   7:Core/Src/system_stm32h7xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32h7xx.c ****   *   user application:
   9:Core/Src/system_stm32h7xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32h7xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32h7xx.c ****   *                      the "startup_stm32h7xx.s" file.
  12:Core/Src/system_stm32h7xx.c ****   *
  13:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClock variable: Contains the core clock, it can be used
  14:Core/Src/system_stm32h7xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32h7xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32h7xx.c ****   *
  17:Core/Src/system_stm32h7xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32h7xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32h7xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32h7xx.c ****   *
  21:Core/Src/system_stm32h7xx.c ****   *
  22:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  23:Core/Src/system_stm32h7xx.c ****   * @attention
  24:Core/Src/system_stm32h7xx.c ****   *
  25:Core/Src/system_stm32h7xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  26:Core/Src/system_stm32h7xx.c ****   * All rights reserved.
  27:Core/Src/system_stm32h7xx.c ****   *
  28:Core/Src/system_stm32h7xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  29:Core/Src/system_stm32h7xx.c ****   * in the root directory of this software component.
  30:Core/Src/system_stm32h7xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  31:Core/Src/system_stm32h7xx.c ****   *
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 2


  32:Core/Src/system_stm32h7xx.c ****   ******************************************************************************
  33:Core/Src/system_stm32h7xx.c ****   */
  34:Core/Src/system_stm32h7xx.c **** 
  35:Core/Src/system_stm32h7xx.c **** /** @addtogroup CMSIS
  36:Core/Src/system_stm32h7xx.c ****   * @{
  37:Core/Src/system_stm32h7xx.c ****   */
  38:Core/Src/system_stm32h7xx.c **** 
  39:Core/Src/system_stm32h7xx.c **** /** @addtogroup stm32h7xx_system
  40:Core/Src/system_stm32h7xx.c ****   * @{
  41:Core/Src/system_stm32h7xx.c ****   */
  42:Core/Src/system_stm32h7xx.c **** 
  43:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Includes
  44:Core/Src/system_stm32h7xx.c ****   * @{
  45:Core/Src/system_stm32h7xx.c ****   */
  46:Core/Src/system_stm32h7xx.c **** 
  47:Core/Src/system_stm32h7xx.c **** #include "stm32h7xx.h"
  48:Core/Src/system_stm32h7xx.c **** #include <math.h>
  49:Core/Src/system_stm32h7xx.c **** #if !defined  (HSE_VALUE)
  50:Core/Src/system_stm32h7xx.c **** #define HSE_VALUE    ((uint32_t)25000000) /*!< Value of the External oscillator in Hz */
  51:Core/Src/system_stm32h7xx.c **** #endif /* HSE_VALUE */
  52:Core/Src/system_stm32h7xx.c **** 
  53:Core/Src/system_stm32h7xx.c **** #if !defined  (CSI_VALUE)
  54:Core/Src/system_stm32h7xx.c ****   #define CSI_VALUE    ((uint32_t)4000000) /*!< Value of the Internal oscillator in Hz*/
  55:Core/Src/system_stm32h7xx.c **** #endif /* CSI_VALUE */
  56:Core/Src/system_stm32h7xx.c **** 
  57:Core/Src/system_stm32h7xx.c **** #if !defined  (HSI_VALUE)
  58:Core/Src/system_stm32h7xx.c ****   #define HSI_VALUE    ((uint32_t)64000000) /*!< Value of the Internal oscillator in Hz*/
  59:Core/Src/system_stm32h7xx.c **** #endif /* HSI_VALUE */
  60:Core/Src/system_stm32h7xx.c **** 
  61:Core/Src/system_stm32h7xx.c **** 
  62:Core/Src/system_stm32h7xx.c **** /**
  63:Core/Src/system_stm32h7xx.c ****   * @}
  64:Core/Src/system_stm32h7xx.c ****   */
  65:Core/Src/system_stm32h7xx.c **** 
  66:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_TypesDefinitions
  67:Core/Src/system_stm32h7xx.c ****   * @{
  68:Core/Src/system_stm32h7xx.c ****   */
  69:Core/Src/system_stm32h7xx.c **** 
  70:Core/Src/system_stm32h7xx.c **** /**
  71:Core/Src/system_stm32h7xx.c ****   * @}
  72:Core/Src/system_stm32h7xx.c ****   */
  73:Core/Src/system_stm32h7xx.c **** 
  74:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Defines
  75:Core/Src/system_stm32h7xx.c ****   * @{
  76:Core/Src/system_stm32h7xx.c ****   */
  77:Core/Src/system_stm32h7xx.c **** 
  78:Core/Src/system_stm32h7xx.c **** /************************* Miscellaneous Configuration ************************/
  79:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to use initialized data in D2 domain SRAM (AHB SRAM) 
  80:Core/Src/system_stm32h7xx.c **** /* #define DATA_IN_D2_SRAM */
  81:Core/Src/system_stm32h7xx.c **** 
  82:Core/Src/system_stm32h7xx.c **** /* Note: Following vector table addresses must be defined in line with linker
  83:Core/Src/system_stm32h7xx.c ****          configuration. */
  84:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
  85:Core/Src/system_stm32h7xx.c ****      anywhere in FLASH BANK1 or AXI SRAM, else the vector table is kept at the automatic
  86:Core/Src/system_stm32h7xx.c ****      remap of boot address selected */
  87:Core/Src/system_stm32h7xx.c **** /* #define USER_VECT_TAB_ADDRESS */
  88:Core/Src/system_stm32h7xx.c **** 
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 3


  89:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
  90:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
  91:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
  92:Core/Src/system_stm32h7xx.c ****      in D2 AXI SRAM else user remap will be done in FLASH BANK2. */
  93:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
  94:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
  95:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D2_AXISRAM_BASE   /*!< Vector Table base address field.
  96:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
  97:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
  98:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
  99:Core/Src/system_stm32h7xx.c **** #else
 100:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK2_BASE  /*!< Vector Table base address field.
 101:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 102:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 103:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 104:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 105:Core/Src/system_stm32h7xx.c **** #else
 106:Core/Src/system_stm32h7xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 107:Core/Src/system_stm32h7xx.c ****      in D1 AXI SRAM else user remap will be done in FLASH BANK1. */
 108:Core/Src/system_stm32h7xx.c **** /* #define VECT_TAB_SRAM */
 109:Core/Src/system_stm32h7xx.c **** #if defined(VECT_TAB_SRAM)
 110:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   D1_AXISRAM_BASE   /*!< Vector Table base address field.
 111:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 112:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 113:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 114:Core/Src/system_stm32h7xx.c **** #else
 115:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BANK1_BASE  /*!< Vector Table base address field.
 116:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 117:Core/Src/system_stm32h7xx.c **** #define VECT_TAB_OFFSET         0x00000000U       /*!< Vector Table base offset field.
 118:Core/Src/system_stm32h7xx.c ****                                                        This value must be a multiple of 0x200. */
 119:Core/Src/system_stm32h7xx.c **** #endif /* VECT_TAB_SRAM */
 120:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 121:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 122:Core/Src/system_stm32h7xx.c **** /******************************************************************************/
 123:Core/Src/system_stm32h7xx.c **** 
 124:Core/Src/system_stm32h7xx.c **** /**
 125:Core/Src/system_stm32h7xx.c ****   * @}
 126:Core/Src/system_stm32h7xx.c ****   */
 127:Core/Src/system_stm32h7xx.c **** 
 128:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Macros
 129:Core/Src/system_stm32h7xx.c ****   * @{
 130:Core/Src/system_stm32h7xx.c ****   */
 131:Core/Src/system_stm32h7xx.c **** 
 132:Core/Src/system_stm32h7xx.c **** /**
 133:Core/Src/system_stm32h7xx.c ****   * @}
 134:Core/Src/system_stm32h7xx.c ****   */
 135:Core/Src/system_stm32h7xx.c **** 
 136:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Variables
 137:Core/Src/system_stm32h7xx.c ****   * @{
 138:Core/Src/system_stm32h7xx.c ****   */
 139:Core/Src/system_stm32h7xx.c ****   /* This variable is updated in three ways:
 140:Core/Src/system_stm32h7xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 141:Core/Src/system_stm32h7xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 142:Core/Src/system_stm32h7xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 143:Core/Src/system_stm32h7xx.c ****          Note: If you use this function to configure the system clock; then there
 144:Core/Src/system_stm32h7xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 145:Core/Src/system_stm32h7xx.c ****                variable is updated automatically.
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 4


 146:Core/Src/system_stm32h7xx.c ****   */
 147:Core/Src/system_stm32h7xx.c ****   uint32_t SystemCoreClock = 64000000;
 148:Core/Src/system_stm32h7xx.c ****   uint32_t SystemD2Clock = 64000000;
 149:Core/Src/system_stm32h7xx.c ****   const  uint8_t D1CorePrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 150:Core/Src/system_stm32h7xx.c **** 
 151:Core/Src/system_stm32h7xx.c **** /**
 152:Core/Src/system_stm32h7xx.c ****   * @}
 153:Core/Src/system_stm32h7xx.c ****   */
 154:Core/Src/system_stm32h7xx.c **** 
 155:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_FunctionPrototypes
 156:Core/Src/system_stm32h7xx.c ****   * @{
 157:Core/Src/system_stm32h7xx.c ****   */
 158:Core/Src/system_stm32h7xx.c **** 
 159:Core/Src/system_stm32h7xx.c **** /**
 160:Core/Src/system_stm32h7xx.c ****   * @}
 161:Core/Src/system_stm32h7xx.c ****   */
 162:Core/Src/system_stm32h7xx.c **** 
 163:Core/Src/system_stm32h7xx.c **** /** @addtogroup STM32H7xx_System_Private_Functions
 164:Core/Src/system_stm32h7xx.c ****   * @{
 165:Core/Src/system_stm32h7xx.c ****   */
 166:Core/Src/system_stm32h7xx.c **** 
 167:Core/Src/system_stm32h7xx.c **** /**
 168:Core/Src/system_stm32h7xx.c ****   * @brief  Setup the microcontroller system
 169:Core/Src/system_stm32h7xx.c ****   *         Initialize the FPU setting and  vector table location
 170:Core/Src/system_stm32h7xx.c ****   *         configuration.
 171:Core/Src/system_stm32h7xx.c ****   * @param  None
 172:Core/Src/system_stm32h7xx.c ****   * @retval None
 173:Core/Src/system_stm32h7xx.c ****   */
 174:Core/Src/system_stm32h7xx.c **** void SystemInit (void)
 175:Core/Src/system_stm32h7xx.c **** {
  28              		.loc 1 175 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 176:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 177:Core/Src/system_stm32h7xx.c ****  __IO uint32_t tmpreg;
 178:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 179:Core/Src/system_stm32h7xx.c **** 
 180:Core/Src/system_stm32h7xx.c ****   /* FPU settings ------------------------------------------------------------*/
 181:Core/Src/system_stm32h7xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 182:Core/Src/system_stm32h7xx.c ****     SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 182 5 view .LVU1
  34              		.loc 1 182 16 is_stmt 0 view .LVU2
  35 0000 274A     		ldr	r2, .L5
  36 0002 D2F88830 		ldr	r3, [r2, #136]
  37 0006 43F47003 		orr	r3, r3, #15728640
  38 000a C2F88830 		str	r3, [r2, #136]
 183:Core/Src/system_stm32h7xx.c ****   #endif
 184:Core/Src/system_stm32h7xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 185:Core/Src/system_stm32h7xx.c **** 
 186:Core/Src/system_stm32h7xx.c ****    /* Increasing the CPU frequency */
 187:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  39              		.loc 1 187 3 is_stmt 1 view .LVU3
  40              		.loc 1 187 32 is_stmt 0 view .LVU4
  41 000e 254B     		ldr	r3, .L5+4
  42 0010 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 5


  43 0012 03F00F03 		and	r3, r3, #15
  44              		.loc 1 187 5 view .LVU5
  45 0016 062B     		cmp	r3, #6
  46 0018 06D8     		bhi	.L2
 188:Core/Src/system_stm32h7xx.c ****   {
 189:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 190:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  47              		.loc 1 190 2 is_stmt 1 view .LVU6
  48 001a 224A     		ldr	r2, .L5+4
  49 001c 1368     		ldr	r3, [r2]
  50 001e 23F00F03 		bic	r3, r3, #15
  51 0022 43F00703 		orr	r3, r3, #7
  52 0026 1360     		str	r3, [r2]
  53              	.L2:
 191:Core/Src/system_stm32h7xx.c ****   }
 192:Core/Src/system_stm32h7xx.c **** 
 193:Core/Src/system_stm32h7xx.c ****   /* Set HSION bit */
 194:Core/Src/system_stm32h7xx.c ****   RCC->CR |= RCC_CR_HSION;
  54              		.loc 1 194 3 view .LVU7
  55              		.loc 1 194 11 is_stmt 0 view .LVU8
  56 0028 1F4B     		ldr	r3, .L5+8
  57 002a 1A68     		ldr	r2, [r3]
  58 002c 42F00102 		orr	r2, r2, #1
  59 0030 1A60     		str	r2, [r3]
 195:Core/Src/system_stm32h7xx.c **** 
 196:Core/Src/system_stm32h7xx.c ****   /* Reset CFGR register */
 197:Core/Src/system_stm32h7xx.c ****   RCC->CFGR = 0x00000000;
  60              		.loc 1 197 3 is_stmt 1 view .LVU9
  61              		.loc 1 197 13 is_stmt 0 view .LVU10
  62 0032 0022     		movs	r2, #0
  63 0034 1A61     		str	r2, [r3, #16]
 198:Core/Src/system_stm32h7xx.c **** 
 199:Core/Src/system_stm32h7xx.c ****   /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
 200:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xEAF6ED7FU;
  64              		.loc 1 200 3 is_stmt 1 view .LVU11
  65              		.loc 1 200 11 is_stmt 0 view .LVU12
  66 0036 1968     		ldr	r1, [r3]
  67 0038 1C4A     		ldr	r2, .L5+12
  68 003a 0A40     		ands	r2, r2, r1
  69 003c 1A60     		str	r2, [r3]
 201:Core/Src/system_stm32h7xx.c ****   
 202:Core/Src/system_stm32h7xx.c ****    /* Decreasing the number of wait states because of lower CPU frequency */
 203:Core/Src/system_stm32h7xx.c ****   if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
  70              		.loc 1 203 3 is_stmt 1 view .LVU13
  71              		.loc 1 203 32 is_stmt 0 view .LVU14
  72 003e 194B     		ldr	r3, .L5+4
  73 0040 1B68     		ldr	r3, [r3]
  74              		.loc 1 203 5 view .LVU15
  75 0042 13F0080F 		tst	r3, #8
  76 0046 06D0     		beq	.L3
 204:Core/Src/system_stm32h7xx.c ****   {
 205:Core/Src/system_stm32h7xx.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 206:Core/Src/system_stm32h7xx.c **** 	MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
  77              		.loc 1 206 2 is_stmt 1 view .LVU16
  78 0048 164A     		ldr	r2, .L5+4
  79 004a 1368     		ldr	r3, [r2]
  80 004c 23F00F03 		bic	r3, r3, #15
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 6


  81 0050 43F00703 		orr	r3, r3, #7
  82 0054 1360     		str	r3, [r2]
  83              	.L3:
 207:Core/Src/system_stm32h7xx.c ****   }
 208:Core/Src/system_stm32h7xx.c **** 
 209:Core/Src/system_stm32h7xx.c **** #if defined(D3_SRAM_BASE)
 210:Core/Src/system_stm32h7xx.c ****   /* Reset D1CFGR register */
 211:Core/Src/system_stm32h7xx.c ****   RCC->D1CFGR = 0x00000000;
  84              		.loc 1 211 3 view .LVU17
  85              		.loc 1 211 15 is_stmt 0 view .LVU18
  86 0056 144B     		ldr	r3, .L5+8
  87 0058 0022     		movs	r2, #0
  88 005a 9A61     		str	r2, [r3, #24]
 212:Core/Src/system_stm32h7xx.c **** 
 213:Core/Src/system_stm32h7xx.c ****   /* Reset D2CFGR register */
 214:Core/Src/system_stm32h7xx.c ****   RCC->D2CFGR = 0x00000000;
  89              		.loc 1 214 3 is_stmt 1 view .LVU19
  90              		.loc 1 214 15 is_stmt 0 view .LVU20
  91 005c DA61     		str	r2, [r3, #28]
 215:Core/Src/system_stm32h7xx.c **** 
 216:Core/Src/system_stm32h7xx.c ****   /* Reset D3CFGR register */
 217:Core/Src/system_stm32h7xx.c ****   RCC->D3CFGR = 0x00000000;
  92              		.loc 1 217 3 is_stmt 1 view .LVU21
  93              		.loc 1 217 15 is_stmt 0 view .LVU22
  94 005e 1A62     		str	r2, [r3, #32]
 218:Core/Src/system_stm32h7xx.c **** #else
 219:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR1 register */
 220:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR1 = 0x00000000;
 221:Core/Src/system_stm32h7xx.c **** 
 222:Core/Src/system_stm32h7xx.c ****   /* Reset CDCFGR2 register */
 223:Core/Src/system_stm32h7xx.c ****   RCC->CDCFGR2 = 0x00000000;
 224:Core/Src/system_stm32h7xx.c **** 
 225:Core/Src/system_stm32h7xx.c ****   /* Reset SRDCFGR register */
 226:Core/Src/system_stm32h7xx.c ****   RCC->SRDCFGR = 0x00000000;
 227:Core/Src/system_stm32h7xx.c **** #endif
 228:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCKSELR register */
 229:Core/Src/system_stm32h7xx.c ****   RCC->PLLCKSELR = 0x02020200;
  95              		.loc 1 229 3 is_stmt 1 view .LVU23
  96              		.loc 1 229 18 is_stmt 0 view .LVU24
  97 0060 1349     		ldr	r1, .L5+16
  98 0062 9962     		str	r1, [r3, #40]
 230:Core/Src/system_stm32h7xx.c **** 
 231:Core/Src/system_stm32h7xx.c ****   /* Reset PLLCFGR register */
 232:Core/Src/system_stm32h7xx.c ****   RCC->PLLCFGR = 0x01FF0000;
  99              		.loc 1 232 3 is_stmt 1 view .LVU25
 100              		.loc 1 232 16 is_stmt 0 view .LVU26
 101 0064 1349     		ldr	r1, .L5+20
 102 0066 D962     		str	r1, [r3, #44]
 233:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1DIVR register */
 234:Core/Src/system_stm32h7xx.c ****   RCC->PLL1DIVR = 0x01010280;
 103              		.loc 1 234 3 is_stmt 1 view .LVU27
 104              		.loc 1 234 17 is_stmt 0 view .LVU28
 105 0068 1349     		ldr	r1, .L5+24
 106 006a 1963     		str	r1, [r3, #48]
 235:Core/Src/system_stm32h7xx.c ****   /* Reset PLL1FRACR register */
 236:Core/Src/system_stm32h7xx.c ****   RCC->PLL1FRACR = 0x00000000;
 107              		.loc 1 236 3 is_stmt 1 view .LVU29
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 7


 108              		.loc 1 236 18 is_stmt 0 view .LVU30
 109 006c 5A63     		str	r2, [r3, #52]
 237:Core/Src/system_stm32h7xx.c **** 
 238:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2DIVR register */
 239:Core/Src/system_stm32h7xx.c ****   RCC->PLL2DIVR = 0x01010280;
 110              		.loc 1 239 3 is_stmt 1 view .LVU31
 111              		.loc 1 239 17 is_stmt 0 view .LVU32
 112 006e 9963     		str	r1, [r3, #56]
 240:Core/Src/system_stm32h7xx.c **** 
 241:Core/Src/system_stm32h7xx.c ****   /* Reset PLL2FRACR register */
 242:Core/Src/system_stm32h7xx.c **** 
 243:Core/Src/system_stm32h7xx.c ****   RCC->PLL2FRACR = 0x00000000;
 113              		.loc 1 243 3 is_stmt 1 view .LVU33
 114              		.loc 1 243 18 is_stmt 0 view .LVU34
 115 0070 DA63     		str	r2, [r3, #60]
 244:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3DIVR register */
 245:Core/Src/system_stm32h7xx.c ****   RCC->PLL3DIVR = 0x01010280;
 116              		.loc 1 245 3 is_stmt 1 view .LVU35
 117              		.loc 1 245 17 is_stmt 0 view .LVU36
 118 0072 1964     		str	r1, [r3, #64]
 246:Core/Src/system_stm32h7xx.c **** 
 247:Core/Src/system_stm32h7xx.c ****   /* Reset PLL3FRACR register */
 248:Core/Src/system_stm32h7xx.c ****   RCC->PLL3FRACR = 0x00000000;
 119              		.loc 1 248 3 is_stmt 1 view .LVU37
 120              		.loc 1 248 18 is_stmt 0 view .LVU38
 121 0074 5A64     		str	r2, [r3, #68]
 249:Core/Src/system_stm32h7xx.c **** 
 250:Core/Src/system_stm32h7xx.c ****   /* Reset HSEBYP bit */
 251:Core/Src/system_stm32h7xx.c ****   RCC->CR &= 0xFFFBFFFFU;
 122              		.loc 1 251 3 is_stmt 1 view .LVU39
 123              		.loc 1 251 11 is_stmt 0 view .LVU40
 124 0076 1968     		ldr	r1, [r3]
 125 0078 21F48021 		bic	r1, r1, #262144
 126 007c 1960     		str	r1, [r3]
 252:Core/Src/system_stm32h7xx.c **** 
 253:Core/Src/system_stm32h7xx.c ****   /* Disable all interrupts */
 254:Core/Src/system_stm32h7xx.c ****   RCC->CIER = 0x00000000;
 127              		.loc 1 254 3 is_stmt 1 view .LVU41
 128              		.loc 1 254 13 is_stmt 0 view .LVU42
 129 007e 1A66     		str	r2, [r3, #96]
 255:Core/Src/system_stm32h7xx.c **** 
 256:Core/Src/system_stm32h7xx.c **** #if (STM32H7_DEV_ID == 0x450UL)
 257:Core/Src/system_stm32h7xx.c ****   /* dual core CM7 or single core line */
 258:Core/Src/system_stm32h7xx.c ****   if((DBGMCU->IDCODE & 0xFFFF0000U) < 0x20000000U)
 130              		.loc 1 258 3 is_stmt 1 view .LVU43
 131              		.loc 1 258 13 is_stmt 0 view .LVU44
 132 0080 0E4B     		ldr	r3, .L5+28
 133 0082 1A68     		ldr	r2, [r3]
 134              		.loc 1 258 22 view .LVU45
 135 0084 0E4B     		ldr	r3, .L5+32
 136 0086 1340     		ands	r3, r3, r2
 137              		.loc 1 258 5 view .LVU46
 138 0088 B3F1005F 		cmp	r3, #536870912
 139 008c 03D2     		bcs	.L4
 259:Core/Src/system_stm32h7xx.c ****   {
 260:Core/Src/system_stm32h7xx.c ****     /* if stm32h7 revY*/
 261:Core/Src/system_stm32h7xx.c ****     /* Change  the switch matrix read issuing capability to 1 for the AXI SRAM target (Target 7) */
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 8


 262:Core/Src/system_stm32h7xx.c ****     *((__IO uint32_t*)0x51008108) = 0x000000001U;
 140              		.loc 1 262 5 is_stmt 1 view .LVU47
 141              		.loc 1 262 35 is_stmt 0 view .LVU48
 142 008e 0D4B     		ldr	r3, .L5+36
 143 0090 0122     		movs	r2, #1
 144 0092 C3F80821 		str	r2, [r3, #264]
 145              	.L4:
 263:Core/Src/system_stm32h7xx.c ****   }
 264:Core/Src/system_stm32h7xx.c **** #endif
 265:Core/Src/system_stm32h7xx.c **** 
 266:Core/Src/system_stm32h7xx.c **** #if defined (DATA_IN_D2_SRAM)
 267:Core/Src/system_stm32h7xx.c ****   /* in case of initialized data in D2 SRAM (AHB SRAM) , enable the D2 SRAM clock (AHB SRAM clock) 
 268:Core/Src/system_stm32h7xx.c **** #if defined(RCC_AHB2ENR_D2SRAM3EN)
 269:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN | RCC_AHB2ENR_D2SRAM3EN);
 270:Core/Src/system_stm32h7xx.c **** #elif defined(RCC_AHB2ENR_D2SRAM2EN)
 271:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_D2SRAM1EN | RCC_AHB2ENR_D2SRAM2EN);
 272:Core/Src/system_stm32h7xx.c **** #else
 273:Core/Src/system_stm32h7xx.c ****   RCC->AHB2ENR |= (RCC_AHB2ENR_AHBSRAM1EN | RCC_AHB2ENR_AHBSRAM2EN);
 274:Core/Src/system_stm32h7xx.c **** #endif /* RCC_AHB2ENR_D2SRAM3EN */
 275:Core/Src/system_stm32h7xx.c **** 
 276:Core/Src/system_stm32h7xx.c ****   tmpreg = RCC->AHB2ENR;
 277:Core/Src/system_stm32h7xx.c ****   (void) tmpreg;
 278:Core/Src/system_stm32h7xx.c **** #endif /* DATA_IN_D2_SRAM */
 279:Core/Src/system_stm32h7xx.c **** 
 280:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 281:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location add offset address for cortex-M4 ------------------*/
 282:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 283:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D2 AX
 284:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 285:Core/Src/system_stm32h7xx.c **** 
 286:Core/Src/system_stm32h7xx.c **** #else
 287:Core/Src/system_stm32h7xx.c **** 
 288:Core/Src/system_stm32h7xx.c ****   /*
 289:Core/Src/system_stm32h7xx.c ****    * Disable the FMC bank1 (enabled after reset).
 290:Core/Src/system_stm32h7xx.c ****    * This, prevents CPU speculation access on this bank which blocks the use of FMC during
 291:Core/Src/system_stm32h7xx.c ****    * 24us. During this time the others FMC master (such as LTDC) cannot use it!
 292:Core/Src/system_stm32h7xx.c ****    */
 293:Core/Src/system_stm32h7xx.c ****   FMC_Bank1_R->BTCR[0] = 0x000030D2;
 146              		.loc 1 293 3 is_stmt 1 view .LVU49
 147              		.loc 1 293 24 is_stmt 0 view .LVU50
 148 0096 0C4B     		ldr	r3, .L5+40
 149 0098 43F2D202 		movw	r2, #12498
 150 009c 1A60     		str	r2, [r3]
 294:Core/Src/system_stm32h7xx.c **** 
 295:Core/Src/system_stm32h7xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 296:Core/Src/system_stm32h7xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 297:Core/Src/system_stm32h7xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AX
 298:Core/Src/system_stm32h7xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 299:Core/Src/system_stm32h7xx.c **** 
 300:Core/Src/system_stm32h7xx.c **** #endif /*DUAL_CORE && CORE_CM4*/
 301:Core/Src/system_stm32h7xx.c **** 
 302:Core/Src/system_stm32h7xx.c **** }
 151              		.loc 1 302 1 view .LVU51
 152 009e 7047     		bx	lr
 153              	.L6:
 154              		.align	2
 155              	.L5:
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 9


 156 00a0 00ED00E0 		.word	-536810240
 157 00a4 00200052 		.word	1375739904
 158 00a8 00440258 		.word	1476543488
 159 00ac 7FEDF6EA 		.word	-352916097
 160 00b0 00020202 		.word	33686016
 161 00b4 0000FF01 		.word	33488896
 162 00b8 80020101 		.word	16843392
 163 00bc 0010005C 		.word	1543507968
 164 00c0 0000FFFF 		.word	-65536
 165 00c4 00800051 		.word	1358987264
 166 00c8 00400052 		.word	1375748096
 167              		.cfi_endproc
 168              	.LFE144:
 170              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 171              		.align	1
 172              		.global	SystemCoreClockUpdate
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 176              		.fpu fpv5-d16
 178              	SystemCoreClockUpdate:
 179              	.LFB145:
 303:Core/Src/system_stm32h7xx.c **** 
 304:Core/Src/system_stm32h7xx.c **** /**
 305:Core/Src/system_stm32h7xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 306:Core/Src/system_stm32h7xx.c ****   *         The SystemCoreClock variable contains the core clock , it can
 307:Core/Src/system_stm32h7xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 308:Core/Src/system_stm32h7xx.c ****   *         other parameters.
 309:Core/Src/system_stm32h7xx.c ****   *
 310:Core/Src/system_stm32h7xx.c ****   * @note   Each time the core clock changes, this function must be called
 311:Core/Src/system_stm32h7xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 312:Core/Src/system_stm32h7xx.c ****   *         based on this variable will be incorrect.
 313:Core/Src/system_stm32h7xx.c ****   *
 314:Core/Src/system_stm32h7xx.c ****   * @note   - The system frequency computed by this function is not the real
 315:Core/Src/system_stm32h7xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 316:Core/Src/system_stm32h7xx.c ****   *           constant and the selected clock source:
 317:Core/Src/system_stm32h7xx.c ****   *
 318:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is CSI, SystemCoreClock will contain the CSI_VALUE(*)
 319:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 320:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 321:Core/Src/system_stm32h7xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the CSI_VALUE(*),
 322:Core/Src/system_stm32h7xx.c ****   *             HSI_VALUE(**) or HSE_VALUE(***) multiplied/divided by the PLL factors.
 323:Core/Src/system_stm32h7xx.c ****   *
 324:Core/Src/system_stm32h7xx.c ****   *         (*) CSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 325:Core/Src/system_stm32h7xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 326:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 327:Core/Src/system_stm32h7xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 328:Core/Src/system_stm32h7xx.c ****   *             64 MHz) but the real value may vary depending on the variations
 329:Core/Src/system_stm32h7xx.c ****   *             in voltage and temperature.
 330:Core/Src/system_stm32h7xx.c ****   *
 331:Core/Src/system_stm32h7xx.c ****   *         (***)HSE_VALUE is a constant defined in stm32h7xx_hal.h file (default value
 332:Core/Src/system_stm32h7xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 333:Core/Src/system_stm32h7xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 334:Core/Src/system_stm32h7xx.c ****   *              have wrong result.
 335:Core/Src/system_stm32h7xx.c ****   *
 336:Core/Src/system_stm32h7xx.c ****   *         - The result of this function could be not correct when using fractional
 337:Core/Src/system_stm32h7xx.c ****   *           value for HSE crystal.
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 10


 338:Core/Src/system_stm32h7xx.c ****   * @param  None
 339:Core/Src/system_stm32h7xx.c ****   * @retval None
 340:Core/Src/system_stm32h7xx.c ****   */
 341:Core/Src/system_stm32h7xx.c **** void SystemCoreClockUpdate (void)
 342:Core/Src/system_stm32h7xx.c **** {
 180              		.loc 1 342 1 is_stmt 1 view -0
 181              		.cfi_startproc
 182              		@ args = 0, pretend = 0, frame = 0
 183              		@ frame_needed = 0, uses_anonymous_args = 0
 184              		@ link register save eliminated.
 185 0000 10B4     		push	{r4}
 186              	.LCFI0:
 187              		.cfi_def_cfa_offset 4
 188              		.cfi_offset 4, -4
 343:Core/Src/system_stm32h7xx.c ****   uint32_t pllp, pllsource, pllm, pllfracen, hsivalue, tmp;
 189              		.loc 1 343 3 view .LVU53
 344:Core/Src/system_stm32h7xx.c ****   uint32_t common_system_clock;
 190              		.loc 1 344 3 view .LVU54
 345:Core/Src/system_stm32h7xx.c ****   float_t fracn1, pllvco;
 191              		.loc 1 345 3 view .LVU55
 346:Core/Src/system_stm32h7xx.c **** 
 347:Core/Src/system_stm32h7xx.c **** 
 348:Core/Src/system_stm32h7xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 349:Core/Src/system_stm32h7xx.c **** 
 350:Core/Src/system_stm32h7xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 192              		.loc 1 350 3 view .LVU56
 193              		.loc 1 350 14 is_stmt 0 view .LVU57
 194 0002 7A4B     		ldr	r3, .L21
 195 0004 1B69     		ldr	r3, [r3, #16]
 196              		.loc 1 350 21 view .LVU58
 197 0006 03F03803 		and	r3, r3, #56
 198              		.loc 1 350 3 view .LVU59
 199 000a 182B     		cmp	r3, #24
 200 000c 00F2E580 		bhi	.L8
 201 0010 DFE813F0 		tbh	[pc, r3, lsl #1]
 202              	.L10:
 203 0014 1B00     		.2byte	(.L13-.L10)/2
 204 0016 E300     		.2byte	(.L8-.L10)/2
 205 0018 E300     		.2byte	(.L8-.L10)/2
 206 001a E300     		.2byte	(.L8-.L10)/2
 207 001c E300     		.2byte	(.L8-.L10)/2
 208 001e E300     		.2byte	(.L8-.L10)/2
 209 0020 E300     		.2byte	(.L8-.L10)/2
 210 0022 E300     		.2byte	(.L8-.L10)/2
 211 0024 1900     		.2byte	(.L12-.L10)/2
 212 0026 E300     		.2byte	(.L8-.L10)/2
 213 0028 E300     		.2byte	(.L8-.L10)/2
 214 002a E300     		.2byte	(.L8-.L10)/2
 215 002c E300     		.2byte	(.L8-.L10)/2
 216 002e E300     		.2byte	(.L8-.L10)/2
 217 0030 E300     		.2byte	(.L8-.L10)/2
 218 0032 E300     		.2byte	(.L8-.L10)/2
 219 0034 EA00     		.2byte	(.L18-.L10)/2
 220 0036 E300     		.2byte	(.L8-.L10)/2
 221 0038 E300     		.2byte	(.L8-.L10)/2
 222 003a E300     		.2byte	(.L8-.L10)/2
 223 003c E300     		.2byte	(.L8-.L10)/2
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 11


 224 003e E300     		.2byte	(.L8-.L10)/2
 225 0040 E300     		.2byte	(.L8-.L10)/2
 226 0042 E300     		.2byte	(.L8-.L10)/2
 227 0044 3700     		.2byte	(.L9-.L10)/2
 228              		.p2align 1
 229              	.L12:
 230 0046 6A4A     		ldr	r2, .L21+4
 231 0048 05E0     		b	.L11
 232              	.L13:
 351:Core/Src/system_stm32h7xx.c ****   {
 352:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
 353:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 233              		.loc 1 353 5 is_stmt 1 view .LVU60
 234              		.loc 1 353 57 is_stmt 0 view .LVU61
 235 004a 684B     		ldr	r3, .L21
 236 004c 1B68     		ldr	r3, [r3]
 237              		.loc 1 353 78 view .LVU62
 238 004e C3F3C103 		ubfx	r3, r3, #3, #2
 239              		.loc 1 353 25 view .LVU63
 240 0052 684A     		ldr	r2, .L21+8
 241 0054 DA40     		lsrs	r2, r2, r3
 242              	.LVL0:
 354:Core/Src/system_stm32h7xx.c ****     break;
 243              		.loc 1 354 5 is_stmt 1 view .LVU64
 244              	.L11:
 355:Core/Src/system_stm32h7xx.c **** 
 356:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
 357:Core/Src/system_stm32h7xx.c ****     common_system_clock = CSI_VALUE;
 358:Core/Src/system_stm32h7xx.c ****     break;
 359:Core/Src/system_stm32h7xx.c **** 
 360:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
 361:Core/Src/system_stm32h7xx.c ****     common_system_clock = HSE_VALUE;
 362:Core/Src/system_stm32h7xx.c ****     break;
 363:Core/Src/system_stm32h7xx.c **** 
 364:Core/Src/system_stm32h7xx.c ****   case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */
 365:Core/Src/system_stm32h7xx.c **** 
 366:Core/Src/system_stm32h7xx.c ****     /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
 367:Core/Src/system_stm32h7xx.c ****     SYSCLK = PLL_VCO / PLLR
 368:Core/Src/system_stm32h7xx.c ****     */
 369:Core/Src/system_stm32h7xx.c ****     pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 370:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 371:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 372:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 373:Core/Src/system_stm32h7xx.c **** 
 374:Core/Src/system_stm32h7xx.c ****     if (pllm != 0U)
 375:Core/Src/system_stm32h7xx.c ****     {
 376:Core/Src/system_stm32h7xx.c ****       switch (pllsource)
 377:Core/Src/system_stm32h7xx.c ****       {
 378:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSI:  /* HSI used as PLL clock source */
 379:Core/Src/system_stm32h7xx.c **** 
 380:Core/Src/system_stm32h7xx.c ****         hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 381:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 382:Core/Src/system_stm32h7xx.c **** 
 383:Core/Src/system_stm32h7xx.c ****         break;
 384:Core/Src/system_stm32h7xx.c **** 
 385:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_CSI:  /* CSI used as PLL clock source */
 386:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 12


 387:Core/Src/system_stm32h7xx.c ****         break;
 388:Core/Src/system_stm32h7xx.c **** 
 389:Core/Src/system_stm32h7xx.c ****         case RCC_PLLCKSELR_PLLSRC_HSE:  /* HSE used as PLL clock source */
 390:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_
 391:Core/Src/system_stm32h7xx.c ****         break;
 392:Core/Src/system_stm32h7xx.c **** 
 393:Core/Src/system_stm32h7xx.c ****       default:
 394:Core/Src/system_stm32h7xx.c ****           hsivalue = (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3)) ;
 395:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 396:Core/Src/system_stm32h7xx.c ****         break;
 397:Core/Src/system_stm32h7xx.c ****       }
 398:Core/Src/system_stm32h7xx.c ****       pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >>9) + 1U ) ;
 399:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 400:Core/Src/system_stm32h7xx.c ****     }
 401:Core/Src/system_stm32h7xx.c ****     else
 402:Core/Src/system_stm32h7xx.c ****     {
 403:Core/Src/system_stm32h7xx.c ****       common_system_clock = 0U;
 404:Core/Src/system_stm32h7xx.c ****     }
 405:Core/Src/system_stm32h7xx.c ****     break;
 406:Core/Src/system_stm32h7xx.c **** 
 407:Core/Src/system_stm32h7xx.c ****   default:
 408:Core/Src/system_stm32h7xx.c ****     common_system_clock = (uint32_t) (HSI_VALUE >> ((RCC->CR & RCC_CR_HSIDIV)>> 3));
 409:Core/Src/system_stm32h7xx.c ****     break;
 410:Core/Src/system_stm32h7xx.c ****   }
 411:Core/Src/system_stm32h7xx.c **** 
 412:Core/Src/system_stm32h7xx.c ****   /* Compute SystemClock frequency --------------------------------------------------*/
 413:Core/Src/system_stm32h7xx.c **** #if defined (RCC_D1CFGR_D1CPRE)
 414:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos];
 245              		.loc 1 414 3 view .LVU65
 246              		.loc 1 414 30 is_stmt 0 view .LVU66
 247 0056 6548     		ldr	r0, .L21
 248 0058 8369     		ldr	r3, [r0, #24]
 249              		.loc 1 414 59 view .LVU67
 250 005a C3F30323 		ubfx	r3, r3, #8, #4
 251              		.loc 1 414 25 view .LVU68
 252 005e 6649     		ldr	r1, .L21+12
 253 0060 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 254              	.LVL1:
 415:Core/Src/system_stm32h7xx.c **** 
 416:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 417:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 255              		.loc 1 417 3 is_stmt 1 view .LVU69
 256              		.loc 1 417 23 is_stmt 0 view .LVU70
 257 0062 DA40     		lsrs	r2, r2, r3
 258              	.LVL2:
 418:Core/Src/system_stm32h7xx.c **** 
 419:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : CM4 CPU, AXI and AHBs Clock frequency  */
 420:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_
 259              		.loc 1 420 3 is_stmt 1 view .LVU71
 260              		.loc 1 420 66 is_stmt 0 view .LVU72
 261 0064 8369     		ldr	r3, [r0, #24]
 262              	.LVL3:
 263              		.loc 1 420 93 view .LVU73
 264 0066 03F00F03 		and	r3, r3, #15
 265              		.loc 1 420 61 view .LVU74
 266 006a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 267              		.loc 1 420 118 view .LVU75
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 13


 268 006c 03F01F03 		and	r3, r3, #31
 269              		.loc 1 420 40 view .LVU76
 270 0070 22FA03F3 		lsr	r3, r2, r3
 271              		.loc 1 420 17 view .LVU77
 272 0074 6149     		ldr	r1, .L21+16
 273              		.loc 1 420 17 view .LVU78
 274 0076 0B60     		str	r3, [r1]
 421:Core/Src/system_stm32h7xx.c **** 
 422:Core/Src/system_stm32h7xx.c **** #else
 423:Core/Src/system_stm32h7xx.c ****   tmp = D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos];
 424:Core/Src/system_stm32h7xx.c **** 
 425:Core/Src/system_stm32h7xx.c ****   /* common_system_clock frequency : CM7 CPU frequency  */
 426:Core/Src/system_stm32h7xx.c ****   common_system_clock >>= tmp;
 427:Core/Src/system_stm32h7xx.c **** 
 428:Core/Src/system_stm32h7xx.c ****   /* SystemD2Clock frequency : AXI and AHBs Clock frequency  */
 429:Core/Src/system_stm32h7xx.c ****   SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RC
 430:Core/Src/system_stm32h7xx.c **** 
 431:Core/Src/system_stm32h7xx.c **** #endif
 432:Core/Src/system_stm32h7xx.c **** 
 433:Core/Src/system_stm32h7xx.c **** #if defined(DUAL_CORE) && defined(CORE_CM4)
 434:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = SystemD2Clock;
 435:Core/Src/system_stm32h7xx.c **** #else
 436:Core/Src/system_stm32h7xx.c ****   SystemCoreClock = common_system_clock;
 275              		.loc 1 436 3 is_stmt 1 view .LVU79
 276              		.loc 1 436 19 is_stmt 0 view .LVU80
 277 0078 614B     		ldr	r3, .L21+20
 278 007a 1A60     		str	r2, [r3]
 437:Core/Src/system_stm32h7xx.c **** #endif /* DUAL_CORE && CORE_CM4 */
 438:Core/Src/system_stm32h7xx.c **** }
 279              		.loc 1 438 1 view .LVU81
 280 007c 5DF8044B 		ldr	r4, [sp], #4
 281              	.LCFI1:
 282              		.cfi_remember_state
 283              		.cfi_restore 4
 284              		.cfi_def_cfa_offset 0
 285 0080 7047     		bx	lr
 286              	.LVL4:
 287              	.L9:
 288              	.LCFI2:
 289              		.cfi_restore_state
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 290              		.loc 1 369 5 is_stmt 1 view .LVU82
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 291              		.loc 1 369 21 is_stmt 0 view .LVU83
 292 0082 5A49     		ldr	r1, .L21
 293 0084 886A     		ldr	r0, [r1, #40]
 369:Core/Src/system_stm32h7xx.c ****     pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1)>> 4)  ;
 294              		.loc 1 369 15 view .LVU84
 295 0086 00F00300 		and	r0, r0, #3
 296              	.LVL5:
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 297              		.loc 1 370 5 is_stmt 1 view .LVU85
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 298              		.loc 1 370 17 is_stmt 0 view .LVU86
 299 008a 8C6A     		ldr	r4, [r1, #40]
 370:Core/Src/system_stm32h7xx.c ****     pllfracen = ((RCC->PLLCFGR & RCC_PLLCFGR_PLL1FRACEN)>>RCC_PLLCFGR_PLL1FRACEN_Pos);
 300              		.loc 1 370 10 view .LVU87
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 14


 301 008c C4F30512 		ubfx	r2, r4, #4, #6
 302              	.LVL6:
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 303              		.loc 1 371 5 is_stmt 1 view .LVU88
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 304              		.loc 1 371 22 is_stmt 0 view .LVU89
 305 0090 CB6A     		ldr	r3, [r1, #44]
 371:Core/Src/system_stm32h7xx.c ****     fracn1 = (float_t)(uint32_t)(pllfracen* ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1)>> 3));
 306              		.loc 1 371 15 view .LVU90
 307 0092 03F0010C 		and	ip, r3, #1
 308              	.LVL7:
 372:Core/Src/system_stm32h7xx.c **** 
 309              		.loc 1 372 5 is_stmt 1 view .LVU91
 372:Core/Src/system_stm32h7xx.c **** 
 310              		.loc 1 372 50 is_stmt 0 view .LVU92
 311 0096 4B6B     		ldr	r3, [r1, #52]
 372:Core/Src/system_stm32h7xx.c **** 
 312              		.loc 1 372 85 view .LVU93
 313 0098 C3F3CC03 		ubfx	r3, r3, #3, #13
 372:Core/Src/system_stm32h7xx.c **** 
 314              		.loc 1 372 23 view .LVU94
 315 009c 0CFB03F3 		mul	r3, ip, r3
 372:Core/Src/system_stm32h7xx.c **** 
 316              		.loc 1 372 12 view .LVU95
 317 00a0 07EE903A 		vmov	s15, r3	@ int
 318 00a4 F8EE677A 		vcvt.f32.u32	s15, s15
 319              	.LVL8:
 374:Core/Src/system_stm32h7xx.c ****     {
 320              		.loc 1 374 5 is_stmt 1 view .LVU96
 374:Core/Src/system_stm32h7xx.c ****     {
 321              		.loc 1 374 8 is_stmt 0 view .LVU97
 322 00a8 14F47C7F 		tst	r4, #1008
 323 00ac D3D0     		beq	.L11
 376:Core/Src/system_stm32h7xx.c ****       {
 324              		.loc 1 376 7 is_stmt 1 view .LVU98
 325 00ae 0128     		cmp	r0, #1
 326 00b0 59D0     		beq	.L14
 327 00b2 0228     		cmp	r0, #2
 328 00b4 74D0     		beq	.L15
 329 00b6 18B3     		cbz	r0, .L20
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 330              		.loc 1 394 11 view .LVU99
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 331              		.loc 1 394 41 is_stmt 0 view .LVU100
 332 00b8 4C48     		ldr	r0, .L21
 333              	.LVL9:
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 334              		.loc 1 394 41 view .LVU101
 335 00ba 0168     		ldr	r1, [r0]
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 336              		.loc 1 394 62 view .LVU102
 337 00bc C1F3C101 		ubfx	r1, r1, #3, #2
 394:Core/Src/system_stm32h7xx.c ****           pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_P
 338              		.loc 1 394 20 view .LVU103
 339 00c0 4C4B     		ldr	r3, .L21+8
 340 00c2 CB40     		lsrs	r3, r3, r1
 341              	.LVL10:
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 15


 395:Core/Src/system_stm32h7xx.c ****         break;
 342              		.loc 1 395 11 is_stmt 1 view .LVU104
 395:Core/Src/system_stm32h7xx.c ****         break;
 343              		.loc 1 395 21 is_stmt 0 view .LVU105
 344 00c4 07EE103A 		vmov	s14, r3	@ int
 345 00c8 F8EE476A 		vcvt.f32.u32	s13, s14
 395:Core/Src/system_stm32h7xx.c ****         break;
 346              		.loc 1 395 41 view .LVU106
 347 00cc 07EE102A 		vmov	s14, r2	@ int
 348 00d0 B8EE476A 		vcvt.f32.u32	s12, s14
 395:Core/Src/system_stm32h7xx.c ****         break;
 349              		.loc 1 395 39 view .LVU107
 350 00d4 86EE867A 		vdiv.f32	s14, s13, s12
 395:Core/Src/system_stm32h7xx.c ****         break;
 351              		.loc 1 395 82 view .LVU108
 352 00d8 036B     		ldr	r3, [r0, #48]
 353              	.LVL11:
 395:Core/Src/system_stm32h7xx.c ****         break;
 354              		.loc 1 395 68 view .LVU109
 355 00da C3F30803 		ubfx	r3, r3, #0, #9
 395:Core/Src/system_stm32h7xx.c ****         break;
 356              		.loc 1 395 59 view .LVU110
 357 00de 06EE903A 		vmov	s13, r3	@ int
 358 00e2 F8EE666A 		vcvt.f32.u32	s13, s13
 395:Core/Src/system_stm32h7xx.c ****         break;
 359              		.loc 1 395 121 view .LVU111
 360 00e6 9FED476A 		vldr.32	s12, .L21+24
 361 00ea 67EE867A 		vmul.f32	s15, s15, s12
 362              	.LVL12:
 395:Core/Src/system_stm32h7xx.c ****         break;
 363              		.loc 1 395 112 view .LVU112
 364 00ee 76EEA77A 		vadd.f32	s15, s13, s15
 395:Core/Src/system_stm32h7xx.c ****         break;
 365              		.loc 1 395 139 view .LVU113
 366 00f2 F7EE006A 		vmov.f32	s13, #1.0e+0
 367 00f6 77EEA67A 		vadd.f32	s15, s15, s13
 395:Core/Src/system_stm32h7xx.c ****         break;
 368              		.loc 1 395 18 view .LVU114
 369 00fa 27EE277A 		vmul.f32	s14, s14, s15
 370              	.LVL13:
 396:Core/Src/system_stm32h7xx.c ****       }
 371              		.loc 1 396 9 is_stmt 1 view .LVU115
 372 00fe 22E0     		b	.L17
 373              	.LVL14:
 374              	.L20:
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 375              		.loc 1 380 9 view .LVU116
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 376              		.loc 1 380 39 is_stmt 0 view .LVU117
 377 0100 0846     		mov	r0, r1
 378              	.LVL15:
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 379              		.loc 1 380 39 view .LVU118
 380 0102 0968     		ldr	r1, [r1]
 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 381              		.loc 1 380 60 view .LVU119
 382 0104 C1F3C101 		ubfx	r1, r1, #3, #2
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 16


 380:Core/Src/system_stm32h7xx.c ****         pllvco = ( (float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PL
 383              		.loc 1 380 18 view .LVU120
 384 0108 3A4B     		ldr	r3, .L21+8
 385 010a CB40     		lsrs	r3, r3, r1
 386              	.LVL16:
 381:Core/Src/system_stm32h7xx.c **** 
 387              		.loc 1 381 9 is_stmt 1 view .LVU121
 381:Core/Src/system_stm32h7xx.c **** 
 388              		.loc 1 381 20 is_stmt 0 view .LVU122
 389 010c 07EE103A 		vmov	s14, r3	@ int
 390 0110 F8EE476A 		vcvt.f32.u32	s13, s14
 381:Core/Src/system_stm32h7xx.c **** 
 391              		.loc 1 381 40 view .LVU123
 392 0114 07EE102A 		vmov	s14, r2	@ int
 393 0118 B8EE476A 		vcvt.f32.u32	s12, s14
 381:Core/Src/system_stm32h7xx.c **** 
 394              		.loc 1 381 38 view .LVU124
 395 011c 86EE867A 		vdiv.f32	s14, s13, s12
 381:Core/Src/system_stm32h7xx.c **** 
 396              		.loc 1 381 81 view .LVU125
 397 0120 036B     		ldr	r3, [r0, #48]
 398              	.LVL17:
 381:Core/Src/system_stm32h7xx.c **** 
 399              		.loc 1 381 67 view .LVU126
 400 0122 C3F30803 		ubfx	r3, r3, #0, #9
 381:Core/Src/system_stm32h7xx.c **** 
 401              		.loc 1 381 58 view .LVU127
 402 0126 06EE903A 		vmov	s13, r3	@ int
 403 012a F8EE666A 		vcvt.f32.u32	s13, s13
 381:Core/Src/system_stm32h7xx.c **** 
 404              		.loc 1 381 120 view .LVU128
 405 012e 9FED356A 		vldr.32	s12, .L21+24
 406 0132 67EE867A 		vmul.f32	s15, s15, s12
 407              	.LVL18:
 381:Core/Src/system_stm32h7xx.c **** 
 408              		.loc 1 381 111 view .LVU129
 409 0136 76EEA77A 		vadd.f32	s15, s13, s15
 381:Core/Src/system_stm32h7xx.c **** 
 410              		.loc 1 381 138 view .LVU130
 411 013a F7EE006A 		vmov.f32	s13, #1.0e+0
 412 013e 77EEA67A 		vadd.f32	s15, s15, s13
 381:Core/Src/system_stm32h7xx.c **** 
 413              		.loc 1 381 16 view .LVU131
 414 0142 27EE277A 		vmul.f32	s14, s14, s15
 415              	.LVL19:
 383:Core/Src/system_stm32h7xx.c **** 
 416              		.loc 1 383 9 is_stmt 1 view .LVU132
 417              	.L17:
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 418              		.loc 1 398 7 view .LVU133
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 419              		.loc 1 398 20 is_stmt 0 view .LVU134
 420 0146 294B     		ldr	r3, .L21
 421 0148 1B6B     		ldr	r3, [r3, #48]
 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 422              		.loc 1 398 50 view .LVU135
 423 014a C3F34623 		ubfx	r3, r3, #9, #7
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 17


 398:Core/Src/system_stm32h7xx.c ****       common_system_clock =  (uint32_t)(float_t)(pllvco/(float_t)pllp);
 424              		.loc 1 398 12 view .LVU136
 425 014e 0133     		adds	r3, r3, #1
 426              	.LVL20:
 399:Core/Src/system_stm32h7xx.c ****     }
 427              		.loc 1 399 7 is_stmt 1 view .LVU137
 399:Core/Src/system_stm32h7xx.c ****     }
 428              		.loc 1 399 57 is_stmt 0 view .LVU138
 429 0150 07EE903A 		vmov	s15, r3	@ int
 430 0154 F8EE677A 		vcvt.f32.u32	s15, s15
 399:Core/Src/system_stm32h7xx.c ****     }
 431              		.loc 1 399 40 view .LVU139
 432 0158 C7EE276A 		vdiv.f32	s13, s14, s15
 399:Core/Src/system_stm32h7xx.c ****     }
 433              		.loc 1 399 27 view .LVU140
 434 015c FCEEE67A 		vcvt.u32.f32	s15, s13
 435 0160 17EE902A 		vmov	r2, s15	@ int
 436              	.LVL21:
 399:Core/Src/system_stm32h7xx.c ****     }
 437              		.loc 1 399 27 view .LVU141
 438 0164 77E7     		b	.L11
 439              	.LVL22:
 440              	.L14:
 386:Core/Src/system_stm32h7xx.c ****         break;
 441              		.loc 1 386 11 is_stmt 1 view .LVU142
 386:Core/Src/system_stm32h7xx.c ****         break;
 442              		.loc 1 386 42 is_stmt 0 view .LVU143
 443 0166 07EE102A 		vmov	s14, r2	@ int
 444 016a F8EE476A 		vcvt.f32.u32	s13, s14
 386:Core/Src/system_stm32h7xx.c ****         break;
 445              		.loc 1 386 40 view .LVU144
 446 016e 9FED266A 		vldr.32	s12, .L21+28
 447 0172 86EE267A 		vdiv.f32	s14, s12, s13
 386:Core/Src/system_stm32h7xx.c ****         break;
 448              		.loc 1 386 83 view .LVU145
 449 0176 1D4B     		ldr	r3, .L21
 450 0178 1B6B     		ldr	r3, [r3, #48]
 386:Core/Src/system_stm32h7xx.c ****         break;
 451              		.loc 1 386 69 view .LVU146
 452 017a C3F30803 		ubfx	r3, r3, #0, #9
 386:Core/Src/system_stm32h7xx.c ****         break;
 453              		.loc 1 386 60 view .LVU147
 454 017e 06EE903A 		vmov	s13, r3	@ int
 455 0182 F8EE666A 		vcvt.f32.u32	s13, s13
 386:Core/Src/system_stm32h7xx.c ****         break;
 456              		.loc 1 386 122 view .LVU148
 457 0186 9FED1F6A 		vldr.32	s12, .L21+24
 458 018a 67EE867A 		vmul.f32	s15, s15, s12
 459              	.LVL23:
 386:Core/Src/system_stm32h7xx.c ****         break;
 460              		.loc 1 386 113 view .LVU149
 461 018e 76EEA77A 		vadd.f32	s15, s13, s15
 386:Core/Src/system_stm32h7xx.c ****         break;
 462              		.loc 1 386 140 view .LVU150
 463 0192 F7EE006A 		vmov.f32	s13, #1.0e+0
 464 0196 77EEA67A 		vadd.f32	s15, s15, s13
 386:Core/Src/system_stm32h7xx.c ****         break;
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 18


 465              		.loc 1 386 18 view .LVU151
 466 019a 27EE277A 		vmul.f32	s14, s14, s15
 467              	.LVL24:
 387:Core/Src/system_stm32h7xx.c **** 
 468              		.loc 1 387 9 is_stmt 1 view .LVU152
 469 019e D2E7     		b	.L17
 470              	.LVL25:
 471              	.L15:
 390:Core/Src/system_stm32h7xx.c ****         break;
 472              		.loc 1 390 11 view .LVU153
 390:Core/Src/system_stm32h7xx.c ****         break;
 473              		.loc 1 390 42 is_stmt 0 view .LVU154
 474 01a0 07EE102A 		vmov	s14, r2	@ int
 475 01a4 F8EE476A 		vcvt.f32.u32	s13, s14
 390:Core/Src/system_stm32h7xx.c ****         break;
 476              		.loc 1 390 40 view .LVU155
 477 01a8 9FED186A 		vldr.32	s12, .L21+32
 478 01ac 86EE267A 		vdiv.f32	s14, s12, s13
 390:Core/Src/system_stm32h7xx.c ****         break;
 479              		.loc 1 390 83 view .LVU156
 480 01b0 0E4B     		ldr	r3, .L21
 481 01b2 1B6B     		ldr	r3, [r3, #48]
 390:Core/Src/system_stm32h7xx.c ****         break;
 482              		.loc 1 390 69 view .LVU157
 483 01b4 C3F30803 		ubfx	r3, r3, #0, #9
 390:Core/Src/system_stm32h7xx.c ****         break;
 484              		.loc 1 390 60 view .LVU158
 485 01b8 06EE903A 		vmov	s13, r3	@ int
 486 01bc F8EE666A 		vcvt.f32.u32	s13, s13
 390:Core/Src/system_stm32h7xx.c ****         break;
 487              		.loc 1 390 122 view .LVU159
 488 01c0 9FED106A 		vldr.32	s12, .L21+24
 489 01c4 67EE867A 		vmul.f32	s15, s15, s12
 490              	.LVL26:
 390:Core/Src/system_stm32h7xx.c ****         break;
 491              		.loc 1 390 113 view .LVU160
 492 01c8 76EEA77A 		vadd.f32	s15, s13, s15
 390:Core/Src/system_stm32h7xx.c ****         break;
 493              		.loc 1 390 140 view .LVU161
 494 01cc F7EE006A 		vmov.f32	s13, #1.0e+0
 495 01d0 77EEA67A 		vadd.f32	s15, s15, s13
 390:Core/Src/system_stm32h7xx.c ****         break;
 496              		.loc 1 390 18 view .LVU162
 497 01d4 27EE277A 		vmul.f32	s14, s14, s15
 498              	.LVL27:
 391:Core/Src/system_stm32h7xx.c **** 
 499              		.loc 1 391 9 is_stmt 1 view .LVU163
 500 01d8 B5E7     		b	.L17
 501              	.LVL28:
 502              	.L8:
 408:Core/Src/system_stm32h7xx.c ****     break;
 503              		.loc 1 408 5 view .LVU164
 408:Core/Src/system_stm32h7xx.c ****     break;
 504              		.loc 1 408 57 is_stmt 0 view .LVU165
 505 01da 044B     		ldr	r3, .L21
 506 01dc 1B68     		ldr	r3, [r3]
 408:Core/Src/system_stm32h7xx.c ****     break;
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 19


 507              		.loc 1 408 78 view .LVU166
 508 01de C3F3C103 		ubfx	r3, r3, #3, #2
 408:Core/Src/system_stm32h7xx.c ****     break;
 509              		.loc 1 408 25 view .LVU167
 510 01e2 044A     		ldr	r2, .L21+8
 511 01e4 DA40     		lsrs	r2, r2, r3
 512              	.LVL29:
 409:Core/Src/system_stm32h7xx.c ****   }
 513              		.loc 1 409 5 is_stmt 1 view .LVU168
 514 01e6 36E7     		b	.L11
 515              	.LVL30:
 516              	.L18:
 361:Core/Src/system_stm32h7xx.c ****     break;
 517              		.loc 1 361 25 is_stmt 0 view .LVU169
 518 01e8 094A     		ldr	r2, .L21+36
 519 01ea 34E7     		b	.L11
 520              	.L22:
 521              		.align	2
 522              	.L21:
 523 01ec 00440258 		.word	1476543488
 524 01f0 00093D00 		.word	4000000
 525 01f4 0090D003 		.word	64000000
 526 01f8 00000000 		.word	.LANCHOR0
 527 01fc 00000000 		.word	.LANCHOR1
 528 0200 00000000 		.word	.LANCHOR2
 529 0204 00000039 		.word	956301312
 530 0208 0024744A 		.word	1249125376
 531 020c 20BCBE4B 		.word	1270791200
 532 0210 40787D01 		.word	25000000
 533              		.cfi_endproc
 534              	.LFE145:
 536              		.global	D1CorePrescTable
 537              		.global	SystemD2Clock
 538              		.global	SystemCoreClock
 539              		.section	.data.SystemCoreClock,"aw"
 540              		.align	2
 541              		.set	.LANCHOR2,. + 0
 544              	SystemCoreClock:
 545 0000 0090D003 		.word	64000000
 546              		.section	.data.SystemD2Clock,"aw"
 547              		.align	2
 548              		.set	.LANCHOR1,. + 0
 551              	SystemD2Clock:
 552 0000 0090D003 		.word	64000000
 553              		.section	.rodata.D1CorePrescTable,"a"
 554              		.align	2
 555              		.set	.LANCHOR0,. + 0
 558              	D1CorePrescTable:
 559 0000 00000000 		.ascii	"\000\000\000\000\001\002\003\004\001\002\003\004\006"
 559      01020304 
 559      01020304 
 559      06
 560 000d 070809   		.ascii	"\007\010\011"
 561              		.text
 562              	.Letext0:
 563              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
 564              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 20


 565              		.file 4 "Drivers/CMSIS/Include/core_cm7.h"
 566              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 567              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 568              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.07\\arm-none-eabi\\include\\
ARM GAS  C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32h7xx.c
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:17     .text.SystemInit:00000000 $t
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:156    .text.SystemInit:000000a0 $d
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:171    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:178    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:203    .text.SystemCoreClockUpdate:00000014 $d
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:228    .text.SystemCoreClockUpdate:00000046 $t
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:523    .text.SystemCoreClockUpdate:000001ec $d
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:558    .rodata.D1CorePrescTable:00000000 D1CorePrescTable
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:551    .data.SystemD2Clock:00000000 SystemD2Clock
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:544    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:540    .data.SystemCoreClock:00000000 $d
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:547    .data.SystemD2Clock:00000000 $d
C:\Users\Joknem\AppData\Local\Temp\cc13N7Ij.s:554    .rodata.D1CorePrescTable:00000000 $d

NO UNDEFINED SYMBOLS
